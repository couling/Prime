.TH PRIME 1 "September 2013" "Philip Couling" "User Commands" 
.SH NAME
prime
.SH SYNOPSIS
prime [options ...]
.SH DESCRIPTION
Generates prime numbers very rapidly.  The current version uses the c lanugage 
.B long long 
data type which on most systems will be 64 bit.

This program has an initialisation phase which generates every prime number up to the square root of the end of the search range.  This can take a long time if you are searching for large prime numbers.  To avoid this step every time you call 
.B prime
you can generate an initialisation file which will be memory mapped instead of generating it each time.  To generate this use
.B prime \-bf 
and then reference this file using 
.B prime \-i <file>
\.
.SH OPTIONS
.TP 
.B \-a \-\-text\-out
Sets the output file mode to ASKII text.  Each prime number will be written on its own line.
This flag will override the \-b flag.  Which ever of them is last will take precident.
.TP 
.B \-b \-\-binary\-out
Sets the output file mode to binary.  Each prime will be written as a 64 bit integer (C long long type).
The endianess will depend of the system architechture.
.TP 
.B \-c size  \-\-chunk-size size
Sets the chunk size to be processed.  This should be larg enough to improve performance but not so large that requires too much RAM.  Each thread will require the chunksize/16 bytes of RAM to function. Suffix this with K,M,G,T to multiply by one thousand, million, billion or trillion respectivly.  The default chunk size is 1G (1,000,000,000 [62,500,000 bytes of RAM]).  

Note that the chunk size will also be used to break up the files if the
.TP
.B \-d \-\-dir
Specifies the directory to place the output files.  Note that specifying an absolute path in the file name (one starting with /) will override this.  By default output files are placed in the current working directory.  See  
.TP 
.B \-e num  \-\-end num
Sets the end of the search range.  Suffix this with K,M,G,T to multiply by one thousand, million, billion or trillion respectivly.  The choice of suffix will affect the default naming convention.
.B -f --file
switch is used (it is by default).  As a result the suffix will also affect the file name format.
.B \-n
for name patterns.
.TP
.B \-f \-\-multi\-file
Sets prime to write to files.  Each chunk will be written to its own file.  This is recommended when multithreading to reduce the contention between threads.
.TP
.B \-F \-\-single\-file
Sets prime to write to a single file instead of stdout. All chunks will be written in order which will slow the program down.  It is better to use \-\-multi\-file if at all possible.
.TP
.B \-i \-\-init-file
Specify an initialisation file generated with -b previously
.TP
.B \-k \-\-clobber Allow overwriting of existing files.  By default prime will cause the job to abort.
.TP
.B \-n \-\-file\-name Sets the name pattern for the output file name.  This recognises an escape character "%" followed by one of the following:
    %%        a single %
    %<i>e<j>o The start value divided by 10^j padded to atleast i digits.  Eg: %12e6om is the start value in millions padded to 12 digits.
    %<i>e<j>O The end value divided by 10^j padded to atleast i digits.  Eg: %12e6om is the start value in millions padded to 12 digits.
    %x        The thread number
    %t        The current time
    %d        The current date

The default file name depends on which suffixes have been used in \-s \-e and \-c flags.  Based on the lowest of these three, one of the following defaults will be used for the file name:
    prime.%9e9og-%9e9OG.txt    G  or larger suffix
    prime.%12e6om-%12e6OM.txt  M  suffix
    prime.%15e3ok-%15e3OK.txt  K  suffix
    prime.%18e0o-%18e0O.txt    no suffix
.TP
.B \-p \-\-use\-stdout
Writes all output to the stdout instead of files.  Like with \-f each chunk will be written in order forcing threads to wate for each other.
.TP
.B \-q \-\-quiet
Switchs off all writing to the stderr except for errors.  Normally prime will write its progress, this flag turns that off.
.B \-q
) switchs.
.TP
.B \-x n  \-\-threads\ n
Specifies the number of threads to use (default 1).
.SH KNOWN ISSUES
The evaluation of time / date in naming can differ between the evaluation of file name and directory.  It's better to place time and date in only one of these two.
.SH EXAMPLES
.TP 
.B \-s num  \-\-start num
Sets the start of the search range.  Suffix this with K,M,G,T to multiply by one thousand, million, billion or trillion respectivly.  The choice of suffix will affect the default naming convention.
.TP
Run single threaded writing every prime number up to 100 billion (100,000,000,000)
prime --end 100G --use-stdout > result.txt
.TP
Generate initialisation file valid for numbers up to 1 billion billion (1,000,000,000,000,000,000).  
To do this we generate every number up to 1,000,000,000 (1 billion).
prime --end 1G prime.%12e6om-%12e6OM.dat --binary-out
.TP
Run with 4 threads using an initialisation file (note initialisation files are NOT required for multithreading)
prime --start 1000T --end-trillion 1001T --thread-count 4 prime.0000000000000000000-0000000001000000000.dat
.SH AUTHOR(S)
Philip Couling
